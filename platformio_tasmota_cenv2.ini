; ***  Example PlatformIO Project Configuration Override File   ***
; ***  Changes done here override settings in platformio.ini    ***
;

; *** Override standard env tasmota32-wroom-32 ***
[env:tasmota32-minimal]
extends                 = env:tasmota32
board_build.partitions  = esp32_partition_app1856k_spiffs320k.csv
build_flags                 = ${common32.build_flags}
                            -I$PROJECT_DIR/include -includetasmota_include.h
; platform_packages           = framework-arduinoespressi
lib_extra_dirs          = lib/libesp32



; *** Override standard env tasmota32-wroom-32 ***
[env:tasmota32-base]
extends                 = env:tasmota32
platform_packages           = framework-arduinoespressif32 @ https://github.com/tasmota/arduino-esp32/releases/download/1.0.7/tasmota-arduinoespressif32-release_v3.3.5.tar.gz
                              platformio/tool-esptoolpy @ ~1.30100
                              platformio/tool-mklittlefs @ ~1.203.200522
; platform_packages       = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/raw/framework-arduinoespressif32/framework-arduinoespressif32-release_v3.3-6aaddf972.tar.gz
;                           platformio/tool-esptoolpy @ ~1.30100
;                           platformio/tool-mklittlefs @ ~1.203.200522

board_build.f_cpu       = 240000000L
; board_build.f_cpu       = 80000000L
; board_build.flash_mode  = qio
; board_build.f_flash     = 80000000L
upload_speed            = 115200
; monitor_speed           = 115200
; upload_port             = /dev/cu.SLAB_USBtoUART
upload_port             = /dev/cu.usbserial-141140
;board_build.partitions  = esp32_partition_app1572k_spiffs983k.csv
board_build.partitions  = esp32_partition_app1856k_spiffs320k.csv
build_unflags               = ${core.build_unflags}
                              -fexceptions
build_flags                 = ${common32.build_flags}
                              -fno-exceptions
                            ;-DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -lc-psram-workaround -lm-psram-workaround -DCONFIG_SPIRAM_IGNORE_NOTFOUND=1
                            ; -save-temps=obj -fverbose-asm
                            ; -DNDEBUG ; -DCOMPILER_OPTIMIZATION_ASSERTIONS_DISABLE
                            ; -DCONFIG_ARDUINO_LOOP_STACK_SIZE=16384
                            ; -Wl,-Llibesp

; lib_extra_dirs          = libesp, lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_ignore              = 
    NimBLE-Arduino
    ESP8266SAM
    ESP8266Audio

[env:tasmota32-znp32]
extends                 = env:tasmota32
;board_build.f_cpu       = 240000000L
board_build.partitions  = esp32_partition_app1856k_spiffs320k.csv
; board_build.partitions  = esp32_partition_app1984k_spiffs64k.csv
build_flags                 = ${common32.build_flags}
                            -DNDEBUG
                            -D_HADINGER_ZNP32
lib_ignore              = 
    NimBLE-Arduino
    ESP8266Audio
    ESP8266SAM

[env:tasmota32-ezsp32]
extends                 = env:tasmota32
;board_build.f_cpu       = 240000000L
board_build.partitions  = esp32_partition_app1856k_spiffs320k.csv
; board_build.partitions  = esp32_partition_app1984k_spiffs64k.csv
build_flags                 = ${common32.build_flags}
                            -DNDEBUG
                            -D_HADINGER_EZSP32
lib_ignore              = 
    NimBLE-Arduino
    ESP8266Audio
    ESP8266SAM

[env:tasmota32-slow]
extends                 = env:tasmota32-base
board_build.f_cpu       = 160000000L


[env:tasmota-berry]
extends                 = env:tasmota
board_build.f_cpu           = 160000000L
; Build variant 2MB = 1MB firmware, +744k OTA, 256k filesystem (Zigbee Bridge, most Shelly devices)
board_build.ldscript        = eagle.flash.2m256.ld
build_flags                 = ${core.build_flags}
                            ; -save-temps=obj -fverbose-asm
                            -D_HADINGER_DEV
upload_port             = /dev/cu.usbserial-141110
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_div, lib/lib_ssl
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display



[env:tasmota-base]
extends                 = env:tasmota
board_build.f_cpu           = 160000000L
; Build variant 2MB = 1MB firmware, +744k OTA, 256k filesystem (Zigbee Bridge, most Shelly devices)
board_build.ldscript        = eagle.flash.2m256.ld
; board_build.ldscript        = eagle.flash.1m64.ld
build_flags                 = ${core.build_flags}
                            ; -save-temps=obj -fverbose-asm
                            ; -D_HADINGER_ZNP
                            -DPIO_FRAMEWORK_MMU__16KB_CACHE__48KB_IRAM_SHARED_2NDHEAP
upload_port             = /dev/cu.usbserial-141110
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_ignore              = 
    ESP8266Audio
    ESP8266SAM
    lib_mail

[env:tasmota-cc2530]
extends                 = env:tasmota
board_build.f_cpu           = 160000000L
; Build variant 2MB = 1MB firmware, +744k OTA, 256k filesystem (Zigbee Bridge, most Shelly devices)
board_build.ldscript        = eagle.flash.2m256.ld
build_flags                 = ${core.build_flags}
                            ; -save-temps=obj -fverbose-asm
                            -D_HADINGER_ZNP
upload_port             = /dev/cu.usbserial-141110
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_ignore              = 
    ESP8266Audio
    ESP8266SAM
    IRremoteESP8266
    lib_mail
    NeoPixelBus-2.6.1.4

[env:tasmota-ezsp]
extends                 = env:tasmota
board_build.f_cpu           = 160000000L
; Build variant 2MB = 1MB firmware, +744k OTA, 256k filesystem (Zigbee Bridge, most Shelly devices)
board_build.ldscript        = eagle.flash.2m256.ld
build_flags                 = ${core.build_flags}
                            -save-temps=obj -fverbose-asm
                            -D_HADINGER_EZSP
; upload_port             = /dev/cu.usbserial-141110
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_ignore              = 
    ESP8266Audio
    ESP8266SAM
    IRremoteESP8266
    lib_mail
    NeoPixelBus-2.6.1.4

[env:tasmota-bulb]
extends                 = env:tasmota
board_build.f_cpu           = 160000000L
; Build variant 2MB = 1MB firmware, +744k OTA, 256k filesystem (Zigbee Bridge, most Shelly devices)
; board_build.ldscript        = eagle.flash.2m256.ld
build_flags                 = ${core.build_flags}
                            -save-temps=obj -fverbose-asm
                            -D_HADINGER_BULB
upload_port             = /dev/cu.usbserial-141110
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display


; *** Override standard env tasmota32-wroom-32 ***
[env:tasmota32-wroom-32]
extends                 = env:tasmota32
board_build.f_cpu       = 240000000L
; board_build.flash_mode  = qio
; board_build.f_flash     = 80000000L
upload_speed            = 115200
; monitor_speed           = 115200
; upload_port             = COM3
board_build.partitions  = esp32_partition_app1572k_spiffs983k.csv
; build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -DFIRMWARE_ODROID_GO
; lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display


[env:tasmota32-denky]
extends                 = env:tasmota32-wroom-32
upload_port             = /dev/cu.usbserial-DN0489N1
build_flags             = ${common32.build_flags}
                          -D_HADINGER_DENKY

[env:tasmota32-olimexpoe]
extends                 = env:tasmota32-wroom-32
upload_port             = /dev/cu.usbserial-141110
build_flags             = ${common32.build_flags}
                          -D_HADINGER_DENKY

[env:tasmota32-nodemcu]
extends                 = env:tasmota32-wroom-32
upload_port             = /dev/cu.SLAB_USBtoUART
build_flags             = ${common32.build_flags}
                          -D_HADINGER_DENKY


[env:tasmota32-m5stack]
extends                 = env:tasmota32-wroom-32
upload_port             = /dev/cu.SLAB_USBtoUART
build_flags             = ${common32.build_flags}
                          -D_HADINGER_M5STACK


; // #define _HADINGER_DEV       // development testing
; #define _HADINGER_DENKY     // Denky device
; // #define _HADINGER_IR_DEV       // development testing
; // #define _HADINGER_BULB       // configuration for AWS IoT configured switches and bulbs, Hue emulation, should be 160 MHz
; // #define _HADINGER_IR         // configuration for AWS IoT IR Blaster
; // #define _HADINGER_ZNP        // configuration for CC2530 ZNP coordinator + AWS IoT + Ping
; // #define _HADINGER_EZSP       // configuration for EZSP coordinator + AWS IoT + I2C + TCP Bridge

[env:tasmota32-stickc]
extends                 = env:tasmota32-base
board_build.f_cpu       = 240000000L
board_build.flash_mode  = qio
board_build.f_flash     = 80000000L
upload_port             = /dev/cu.usbserial-21524AEB83
upload_speed            = 115200
build_flags             = ${common32.build_flags} -DFIRMWARE_M5STACK_CORE2
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display, lib/lib_audio, lib/libesp32_lvgl

[env:tasmota32-core2-custom]
extends                 = env:tasmota32_base
board                   = odroid_esp32
board_build.f_cpu       = 240000000L
board_build.flash_mode  = qio
board_build.f_flash     = 80000000L
upload_speed            = 2000000
board_build.partitions  = esp32_partition_app2944k_spiffs10M.csv
build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -lc-psram-workaround -lm-psram-workaround
                          ; -DFIRMWARE_M5STACK_CORE2
                          -D_HADINGER_M5STACK_CORE2
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display, lib/lib_audio, lib/libesp32_lvgl

[core]
; Activate (by removing the ";" in the next lines) if you want to override the standard core defined in platformio.ini !!!
platform                    = ${core_stage.platform}
platform_packages           = ${core_stage.platform_packages}
build_unflags               = ${core_stage.build_unflags}
build_flags                 = ${core_stage.build_flags}

[core_stage]
; *** Esp8266 core for Arduino version stage
platform                    = espressif8266 @ 3.0.0
platform_packages           =
; *** Use Xtensa build chain 10.2. GNU23 from https://github.com/earlephilhower/esp-quick-toolchain
                              tasmota/toolchain-xtensa @ 5.100200.210303
build_unflags               = ${esp_defaults.build_unflags}
                              -Wswitch-unreachable
build_flags                 = ${esp82xx_defaults.build_flags}
; *** 16k extra heap https://github.com/esp8266/Arduino/pull/7060
                              -D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED
                              -Wno-switch-unreachable